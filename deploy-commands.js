require('dotenv').config();
const { REST, Routes } = require('discord.js');
const fs = require('fs');


const commands = [];
const commandFiles = fs.readdirSync('./commands').filter(file => file.endsWith('.js'));

for (const file of commandFiles) {
    try {
        const command = require(`./commands/${file}`);
        if (command.data) {
            commands.push(command.data.toJSON());
            console.log(`‚úì ${file}`);
        }
    } catch (error) {
        console.error(`‚ùå Erreur dans ${file}:`, error.message);
    }
}

const rest = new REST({ version: '10' }).setToken(process.env.DISCORD_TOKEN);

(async () => {
    try {
        console.log(`\nüöÄ Envoi de ${commands.length} commandes √† Discord...`);

        const data = await rest.put(
            Routes.applicationCommands(process.env.APP_ID),
            { body: commands }
        );

        console.log(`\n‚úÖ Synchronisation r√©ussie ! ${data.length} commandes actives :`);
        data.forEach(cmd => console.log(`- /${cmd.name}`));
    } catch (error) {
        console.error('\nüî• ERREUR DE SYNCHRONISATION :');
        console.error('1. V√©rifiez que :');
        console.error('   - Le token dans .env est EXACTEMENT celui du portail Discord');
        console.error('   - L\'APP_ID correspond √† l\'ID de l\'application (pas du bot)');
        console.error('2. R√©g√©n√©rez le token si n√©cessaire');
        console.error('\nD√©tail technique:', error.message);
        
        // Test suppl√©mentaire
        console.log('\nüîé Test API:');
        try {
            const response = await rest.get(Routes.user('@me'));
            console.log('‚úÖ Token valide! Bot:', response.username);
        } catch (apiError) {
            console.error('‚ùå √âchec du test API:', apiError.message);
        }
    }
})();